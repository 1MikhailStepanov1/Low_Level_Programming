Запрос на выборку элемента

Person(select: true, node_name: "John"){
    id,
    props.cyl
};


Result output:

Query: Select
class_type: Person
  SelectionSet:
    Arguments:
      Argument: node_name
      Argument_value: "John"
  ResultSet:
    StringConstant: id
    StringConstant: props.cyl

Person(select: true, node_name: "John", props.privet: 123){
    id,
    props.cyl
};

Query: Select
class_type: Person
  SelectionSet:
    Arguments:
      Argument: node_name
        Argument_value: "John"
      Argument: props.privet
        Argument_value: 123
  ResultSet:
    StringConstant: id
    StringConstant: props.cyl

------------------------------------------------------

Запрос на удаление элемента

Person(delete: true,
    node_name: "John"){
    id,
    node_name
};

Result output:

Query: Delete
class_type: Person
  SelectionSet:
    Arguments:
      Argument: node_name
        Argument_value: "John"
  ResultSet:
    StringConstant: id
    StringConstant: node_name


------------------------------------------------------

Запрос на вставку элемента

Person(insert: {
    {
        node_name: Volkswagen,
        node_class: Object2
    }
}){
    id
};

Result Output:

Query: Insert
class_type: Person
  SelectionSet:
    Objects:
      Object:
        Name: Volkswagen
        Class: Object2
  ResultSet:
    StringConstant: id


Person(insert: {
    {
        node_name: Volkswagen,
        node_class: Object,
        props {
            cyl : 123,
            privet : "privet"
        }
    }
}){
    id
};

Result Output:

Query: Insert
class_type: Person
  SelectionSet:
    Objects:
      Object:
        Name: Volkswagen
        Class: Object
        Fields:
          Field: cyl
          Value: 123
          Field: privet
          Value: "privet"
  ResultSet:
    StringConstant: id

------------------------------------------------------

Запрос на обновление элемента

Person(update:[["set", node_name, "Jack"],["set", props.cyl, "123"]],id: 1){id,node_class,node_name};

Query: Update
class_type: Person
  SelectionSet:
    Arguments:
      Argument: id
        Argument_value: 1
    SubOperations:
      Sub_Operation: Person
        Name: node_name
        Value: "Jack"
      Sub_Operation: "Jack"
        Name: props.cyl
        Value: "123"
  ResultSet:
    StringConstant: id
    StringConstant: node_class
    StringConstant: node_name



_gt - Greater than
_ge - Greater than or equal
_lt - Lass than
_le - Less than or equal
_ne - Not equal
AND
OR
_like - pattern search
